{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","settodo","selectedtodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","selectfilter","selectinputfilter","selectedfilter","selectedinpputfilter","onclickhandle","onChange","value","placeholder","style","pointerEvents","length","Loader","TodoModal","user","loading","chosentodo","setuser","href","email","name","App","useState","setTodos","loadingTodos","setLoadingTodos","loadingUser","setLoadingUser","error","setError","setTodo","setUser","completedFilters","setCompletedFilters","inputFilter","setInputfilter","filteredTodos","setFilteredTodos","useEffect","loadTodos","a","catch","e","message","finally","loadUser","userId","selectInputFilter","target","trimStart","toLowerCase","useCallback","useMemo","filter","to","matchesCompletedFilter","matchesInputFilter","includes","event","chosenTodo","t","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af8927a6.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  settodo: (todo: Todo) => void;\n  selectedtodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, settodo, selectedtodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos?.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': selectedtodo?.id === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => settodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye': !(selectedtodo?.id === todo.id),\n                  'fa-eye-slash': selectedtodo?.id === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n      {/* <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","type Props = {\n  selectfilter: (e: React.ChangeEvent<HTMLSelectElement>) => void,\n  selectinputfilter: (e: React.ChangeEvent<HTMLInputElement>) => void\n  selectedfilter: 'all' | 'active' | 'completed';\n  selectedinpputfilter: string;\n  onclickhandle: () => void;\n};\n\nexport const TodoFilter = ({\n  selectfilter,\n  selectinputfilter,\n  selectedfilter,\n  selectedinpputfilter,\n  onclickhandle,\n}: Props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={selectfilter}\n          value={selectedfilter}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={selectinputfilter}\n        value={selectedinpputfilter}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        {selectedinpputfilter.length > 0 && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onclickhandle}\n          />\n\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null;\n  loading: boolean;\n  chosentodo: Todo | null;\n  setuser: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user, loading, chosentodo, setuser,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && <Loader />}\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosentodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setuser()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {chosentodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {chosentodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos, getUser } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport type CompletedFilter = 'all' | 'active' | 'completed';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>([]);\n  const [loadingTodos, setLoadingTodos] = useState<boolean>(false);\n  const [loadingUser, setLoadingUser] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [completedFilters, setCompletedFilters] = useState<CompletedFilter>('all');\n  const [inputFilter, setInputfilter] = useState<string>('');\n  const [filteredTodos, setFilteredTodos] = useState<Todo[] | null>(todos);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      setLoadingTodos(true);\n      setError(false);\n      setUser(null);\n\n      getTodos().then(setTodos).catch(e => {\n        setError(e.message);\n      }).finally(() => setLoadingTodos(false));\n    };\n\n    loadTodos();\n  }, []);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      setLoadingUser(true);\n      setError(false);\n      setUser(null);\n\n      if (todo) {\n        getUser(todo?.userId).then(setUser).catch(e => {\n          setError(e.message);\n        }).finally(() => setLoadingUser(false));\n      }\n    };\n\n    loadUser();\n  }, [todo]);\n\n  const selectTodo = (chosenTodo: Todo) => {\n    if (todos) {\n      const t = todos?.find(to => to.id === chosenTodo.id);\n\n      setLoadingUser(true);\n      setTodo(t as Todo);\n    }\n  };\n\n  const selectCompletedFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCompletedFilters(event.target.value as CompletedFilter);\n  };\n\n  const selectInputFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputfilter(e.target.value.trimStart().toLowerCase());\n  };\n\n  useCallback(selectInputFilter, [inputFilter]);\n\n  const selectUser = () => {\n    setTodo(null);\n    setUser(null);\n  };\n\n  const onClickHandle = () => {\n    setInputfilter('');\n  };\n\n  useMemo(() => {\n    if (todos) {\n      setFilteredTodos(todos.filter(to => {\n        let matchesCompletedFilter = true;\n\n        if (completedFilters === 'active') {\n          matchesCompletedFilter = !to.completed;\n        } else if (completedFilters === 'completed') {\n          matchesCompletedFilter = to.completed;\n        }\n\n        let matchesInputFilter = true;\n\n        if (inputFilter.length > 0) {\n          matchesInputFilter = to.title.toLowerCase().includes(inputFilter);\n        }\n\n        return matchesCompletedFilter && matchesInputFilter;\n      }));\n    }\n  }, [completedFilters, inputFilter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectfilter={selectCompletedFilter}\n                selectinputfilter={selectInputFilter}\n                selectedfilter={completedFilters}\n                selectedinpputfilter={inputFilter}\n                onclickhandle={onClickHandle}\n              />\n            </div>\n\n            <div className=\"block\">\n              {error && <p>{error}</p>}\n              {loadingTodos && <Loader />}\n\n              {!loadingTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                  settodo={selectTodo}\n                  selectedtodo={todo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          user={user}\n          loading={loadingUser}\n          chosentodo={todo}\n          setuser={selectUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}